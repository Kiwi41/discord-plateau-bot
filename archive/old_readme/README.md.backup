# üé≤ Bot Discord pour Soir√©es Plateaux - Documentation Compl√®te

## üìã Table des mati√®res

1. [Introduction](#introduction)
2. [Qu'est-ce que ce bot ?](#quest-ce-que-ce-bot)
3. [Comment √ßa fonctionne ?](#comment-√ßa-fonctionne)
4. [Architecture du syst√®me](#architecture-du-syst√®me)
5. [Installation et configuration](#installation-et-configuration)
6. [Utilisation](#utilisation)
7. [D√©pannage](#d√©pannage)
8. [Maintenance](#maintenance)

---

## üéØ Introduction

Ce bot Discord a √©t√© cr√©√© pour **automatiser la gestion des soir√©es plateaux** dans votre serveur Discord. Il cr√©e automatiquement des posts dans un forum pour planifier les soir√©es jeux de plateau du vendredi soir.

### üé™ Pour qui ?

- **Communaut√©s de jeux de plateau** 
- **Serveurs Discord** organisant des √©v√©nements r√©currents
- **Gestionnaires de communaut√©s** voulant automatiser la planification

---

## ü§ñ Qu'est-ce que ce bot ?

### Fonctionnalit√©s principales

‚úÖ **Cr√©ation automatique de posts** chaque mardi √† 10h  
‚úÖ **R√©cup√©ration d'informations** depuis les √©v√©nements Discord  
‚úÖ **Gestion intelligente des doublons** (pas de posts multiples)  
‚úÖ **Mise √† jour automatique** si les infos changent  
‚úÖ **Commandes manuelles** pour cr√©er ou traiter les posts  
‚úÖ **Support des fuseaux horaires**  

### Ce que fait le bot concr√®tement

1. **Chaque mardi √† 10h** ‚Üí Cr√©e des posts pour les 4 prochains vendredis
2. **R√©cup√®re les infos** ‚Üí Heure, lieu, description depuis Discord
3. **Poste dans le forum** ‚Üí Message avec toutes les infos importantes
4. **Met √† jour** ‚Üí Si tu changes l'√©v√©nement, le post se met √† jour

---

## üîÑ Comment √ßa fonctionne ?

### Le cycle de vie du bot

```mermaid
graph TD
    A[Mardi 10h] --> B[Rechercher √©v√©nements Discord]
    B --> C[Calculer 4 prochains vendredis]
    C --> D[Pour chaque vendredi]
    D --> E{Post existe ?}
    E -->|Non| F[Cr√©er nouveau post]
    E -->|Oui| G[V√©rifier changements]
    G -->|Changements| H[Mettre √† jour post]
    G -->|Aucun| I[Laisser tel quel]
    F --> J[Post cr√©√©]
    H --> J
    I --> J
    J --> K{Dernier vendredi ?}
    K -->|Non| D
    K -->|Oui| L[Fini jusqu'au mardi suivant]
```

### Types d'√©v√©nements g√©r√©s

Le bot peut g√©rer diff√©rents types d'√©v√©nements Discord :

1. **√âv√©nements sp√©cifiques** : Cr√©√©s pour un vendredi pr√©cis
2. **√âv√©nements r√©currents** : Se r√©p√®tent chaque semaine
3. **Valeurs par d√©faut** : Si aucun √©v√©nement n'est trouv√©

---

## üèóÔ∏è Architecture du syst√®me

### Vue d'ensemble

![Architecture](architecture.svg)

Le syst√®me est compos√© de plusieurs √©l√©ments qui travaillent ensemble :

#### üéÆ Discord (Interface utilisateur)
- **Serveur Discord** : O√π se trouve votre communaut√©
- **Canal Forum** : O√π les posts sont cr√©√©s (ex: `#planning-plateau`)
- **√âv√©nements Discord** : Source d'informations (date, heure, lieu)

#### ‚òÅÔ∏è Heroku (H√©bergement cloud)
- **Bot Node.js** : Le programme principal qui tourne 24h/24
- **Planificateur** : D√©clenche les actions automatiquement
- **Variables d'environnement** : Configuration s√©curis√©e

#### üîß Fonctions principales
- **R√©cup√©ration d'√©v√©nements** : Se connecte √† Discord pour r√©cup√©rer les infos
- **Traitement des vendredis** : Calcule et traite chaque vendredi
- **Cr√©ation de posts** : G√©n√®re les messages du forum
- **V√©rification des doublons** : √âvite les posts multiples

### Flux des donn√©es

![Flux de donn√©es](data_flow.svg)

Les donn√©es circulent ainsi :
1. **√âv√©nements Discord** ‚Üí R√©cup√©r√©s via l'API Discord
2. **Traitement** ‚Üí Extraction et formatage des informations
3. **Post Forum** ‚Üí Cr√©ation du message avec embed Discord

### Processus de d√©ploiement

![Processus de d√©ploiement](deployment.svg)

Le d√©ploiement suit ces √©tapes :
1. **D√©veloppement local** ‚Üí Code, configuration, tests
2. **Versioning Git** ‚Üí Sauvegarde et suivi des modifications
3. **Heroku** ‚Üí D√©ploiement cloud automatique
4. **Discord** ‚Üí Configuration du bot et permissions
5. **Production** ‚Üí Bot actif 24h/24

### Workflow utilisateur

![Workflow utilisateur](user_workflow.svg)

Le bot fonctionne de deux fa√ßons :
- **Automatique** : Chaque samedi, traite les 4 prochains vendredis
- **Manuel** : Via les commandes `!create-plateau-post` et `!process-next-month`

### Cycle de vie du bot

![Cycle de vie du bot](bot_lifecycle.svg)

Le cycle de vie complet du bot :
1. **D√©marrage** : Initialisation et connexion Discord
2. **Boucle principale** : √âcoute des √©v√©nements et commandes
3. **Traitement** : Gestion des √©v√©nements avec retry et logging
4. **Attente** : Veille jusqu'√† la prochaine activit√©

### Traitement d√©taill√© d'un √©v√©nement

![Traitement √©v√©nement](event_processing.svg)

Processus d√©taill√© pour traiter un vendredi sp√©cifique :
1. **API Discord** : R√©cup√©ration avec retry automatique
2. **Filtrage** : Par date, mots-cl√©s et priorit√© r√©currente
3. **Extraction** : Heure, lieu, description avec formatage
4. **Forum** : Cr√©ation ou mise √† jour avec comparaison intelligente

---

## üì¶ Installation et configuration

### Pr√©requis

Avant de commencer, tu as besoin de :

- [ ] Un **compte Discord** avec un serveur
- [ ] Un **compte Heroku** (gratuit)
- [ ] **Node.js** install√© sur ton ordinateur (pour le d√©veloppement)
- [ ] **Git** install√© sur ton ordinateur

### √âtape 1 : Cr√©er le bot Discord

#### 1.1 Aller sur le portail d√©veloppeur Discord
1. Va sur https://discord.com/developers/applications
2. Clique sur "New Application"
3. Donne un nom √† ton application (ex: "Bot Plateaux")

#### 1.2 Cr√©er le bot
1. Dans le menu de gauche, clique sur "Bot"
2. Clique sur "Add Bot"
3. **Important** : Note le **Token** (garde-le secret !)

#### 1.3 Configurer les permissions
Le bot a besoin de ces permissions :
- ‚úÖ Send Messages
- ‚úÖ Create Public Threads
- ‚úÖ Send Messages in Threads
- ‚úÖ Embed Links
- ‚úÖ Use Slash Commands

#### 1.4 Inviter le bot sur ton serveur
1. Va dans "OAuth2" > "URL Generator"
2. S√©lectionne "bot" et les permissions ci-dessus
3. Copie l'URL g√©n√©r√©e et ouvre-la dans ton navigateur
4. S√©lectionne ton serveur et autorise le bot

### √âtape 2 : R√©cup√©rer les IDs Discord

Tu vas avoir besoin de plusieurs identifiants Discord. Voici comment les trouver :

#### 2.1 Activer le mode d√©veloppeur
1. Dans Discord, va dans "Param√®tres utilisateur" (roue dent√©e)
2. "Avanc√©" ‚Üí Active "Mode d√©veloppeur"

#### 2.2 R√©cup√©rer les IDs
- **Guild ID (Serveur)** : Clic droit sur ton serveur ‚Üí "Copier l'ID"
- **Channel ID (Forum)** : Clic droit sur ton canal forum ‚Üí "Copier l'ID"  
- **Event ID** (optionnel) : Clic droit sur un √©v√©nement ‚Üí "Copier l'ID"

### √âtape 3 : Configurer les variables d'environnement

Cr√©e un fichier `.env` avec ces informations :

```bash
# Token du bot Discord (OBLIGATOIRE)
DISCORD_TOKEN=ton_token_bot_ici

# ID du serveur Discord (OBLIGATOIRE)  
GUILD_ID=ton_guild_id_ici

# ID du canal forum (OBLIGATOIRE)
FORUM_CHANNEL_ID=ton_forum_channel_id_ici

# URL d'inscription (OBLIGATOIRE)
REGISTRATION_URL=https://ton-lien-inscription.com

# Fuseau horaire (OPTIONNEL)
TIMEZONE=Europe/Paris

# ID √©v√©nement r√©current (OPTIONNEL)
# EVENT_ID=ton_event_id_ici
```

### √âtape 4 : D√©ployer sur Heroku

#### 4.1 Pr√©paration locale
```bash
# Cloner ou t√©l√©charger le code
git clone https://github.com/ton-repo/discord-plateau-bot.git
cd discord-plateau-bot

# Installer les d√©pendances
npm install
```

#### 4.2 Configuration Heroku
```bash
# Cr√©er l'application Heroku
heroku create nom-de-ton-app

# Configurer les variables d'environnement
heroku config:set DISCORD_TOKEN=ton_token
heroku config:set GUILD_ID=ton_guild_id
heroku config:set FORUM_CHANNEL_ID=ton_channel_id
heroku config:set REGISTRATION_URL=ton_url
heroku config:set TIMEZONE=Europe/Paris

# D√©ployer
git push heroku master

# D√©marrer le bot
heroku ps:scale worker=1
```

---

## üéÆ Utilisation

### Commandes disponibles

Le bot r√©pond √† ces commandes dans Discord :

| Commande | Description | Qui peut l'utiliser |
|----------|-------------|-------------------|
| `!create-plateau-post` | Cr√©e un post pour le prochain vendredi | Admins |
| `!process-next-month` | Cr√©e des posts pour les 4 prochains vendredis | Admins |  
| `!plateau-help` | Affiche l'aide | Tous |

### Fonctionnement automatique

#### ‚è∞ Planification automatique
- **Quand** : Chaque samedi √† 3h00 du matin
- **Quoi** : Traite les 4 prochains vendredis
- **Timezone** : Selon ta configuration (d√©faut: Europe/Paris)

#### üîÑ Mise √† jour intelligente
Le bot met √† jour les posts si :
- L'heure de l'√©v√©nement change
- Le lieu change  
- La description change
- Le lien vers l'√©v√©nement change

### Exemple de post g√©n√©r√©

Le bot cr√©e des posts comme celui-ci :

```
üé≤ Soir√©e Plateaux du Vendredi ! üé≤

üé≤ Soir√©e Plateaux du vendredi !

Venez d√©couvrir et jouer √† une grande vari√©t√© de jeux de plateau dans une ambiance conviviale !

üéØ Au programme :
‚Ä¢ Jeux de strat√©gie, coop√©ratifs, party games...
‚Ä¢ Accueil des d√©butants et confirm√©s  
‚Ä¢ Ambiance d√©tendue et bonne humeur garantie

Rendez-vous 20:30 pour une soir√©e inoubliable ! üéâ

üìÖ Date: vendredi 10 octobre 2025
üïñ Heure: 20:30  
üìç Lieu: üìç Le Cube en Bois
üéØ √âv√©nement Discord: [Rejoindre l'√©v√©nement Discord](https://discord.com/events/...)
```

---

## üîß D√©pannage

### Probl√®mes courants et solutions

#### ‚ùå "Bot connect√© mais rien ne se passe"

**Causes possibles :**
- Le bot n'a pas les bonnes permissions
- Les IDs sont incorrects  
- Le canal forum n'existe pas

**Solutions :**
1. V√©rifie les permissions du bot
2. V√©rifie les IDs dans les variables d'environnement
3. Regarde les logs : `heroku logs --tail`

#### ‚ùå "Impossible de r√©cup√©rer les √©v√©nements Discord"

**Causes possibles :**
- Timeout r√©seau
- Pas d'√©v√©nements cr√©√©s
- Bot pas dans le bon serveur

**Solutions :**
1. Le bot fait des retry automatiques
2. Cr√©e des √©v√©nements Discord pour les vendredis
3. V√©rifie que le bot est bien sur le serveur

#### ‚ùå "Posts cr√©√©s mais avec valeurs par d√©faut"

**Causes possibles :**
- Aucun √©v√©nement trouv√© pour ce vendredi
- √âv√©nement r√©current mal configur√©
- Mots-cl√©s de recherche ne correspondent pas

**Solutions :**
1. Cr√©e des √©v√©nements Discord avec "plateau" ou "soir√©e" dans le nom
2. V√©rifie l'EVENT_ID si tu en as un
3. Regarde les logs pour voir ce qui est trouv√©

### Commandes de diagnostic

```bash
# Voir les logs en temps r√©el  
heroku logs --tail

# Voir les logs des 100 derni√®res lignes
heroku logs -n 100

# Voir le statut du bot
heroku ps

# Voir la configuration
heroku config

# Red√©marrer le bot
heroku restart
```

### Logs importants √† surveiller

‚úÖ **Bon fonctionnement :**
```
ü§ñ Bot connect√© en tant que Bot Soir√©es Plateaux#2860!
‚úÖ 10 √©v√©nements trouv√©s sur le serveur  
‚úÖ √âv√©nement r√©current trouv√©: Soir√©e plateaux (ID: ...)
‚úÖ Post cr√©√©: Soir√©e Plateaux - vendredi 10 octobre 2025
```

‚ùå **Probl√®mes :**
```
‚ö†Ô∏è Impossible de r√©cup√©rer les √©v√©nements Discord: Timeout
‚ùå Serveur Discord non trouv√©
‚ùå Canal forum non trouv√©  
‚ö†Ô∏è Utilisation de l'URL d'inscription g√©n√©rique
```

---

## üîß Maintenance

### T√¢ches r√©guli√®res

#### Hebdomadaire
- [ ] V√©rifier que les posts sont bien cr√©√©s
- [ ] S'assurer que les √©v√©nements Discord sont √† jour

#### Mensuel  
- [ ] V√©rifier les logs d'erreurs
- [ ] Mettre √† jour les liens d'inscription si n√©cessaire

#### Selon les besoins
- [ ] Ajouter de nouveaux mots-cl√©s de recherche
- [ ] Modifier les valeurs par d√©faut
- [ ] Ajuster la planification

### Modifier la configuration

#### Changer l'heure de planification
Dans `index.js`, ligne ~750 :
```javascript
// Actuel : samedi √† 3h00
cron.schedule('0 3 * * 6', () => {

// Pour mardi √† 10h00 :  
cron.schedule('0 10 * * 2', () => {
```

#### Modifier les valeurs par d√©faut
Dans `index.js`, cherche "valeurs par d√©faut" et modifie :
```javascript
eventTime = '20:30'; // Heure par d√©faut
eventLocation = 'üìç [Le Cube en Bois](...)'; // Lieu par d√©faut
```

#### Ajouter des mots-cl√©s de recherche
Dans `index.js`, cherche "keywords" et ajoute :
```javascript
const keywords = ['plateau', 'soir√©e', 'jeu', 'board', 'game', 'nouveau_mot'];
```

### Sauvegarde et restauration

#### Sauvegarder la configuration
```bash
# Sauvegarder les variables d'environnement
heroku config > config_backup.txt

# Sauvegarder le code
git clone https://github.com/ton-repo/discord-plateau-bot.git backup/
```

#### Restaurer apr√®s probl√®me
```bash
# Restaurer les variables
heroku config:set $(cat config_backup.txt)

# Red√©ployer le code
git push heroku master --force

# Red√©marrer
heroku restart
```

---

## üìû Support

### O√π trouver de l'aide

1. **Logs d'erreur** : `heroku logs --tail`
2. **Documentation Discord.js** : https://discord.js.org/
3. **Documentation Heroku** : https://devcenter.heroku.com/
4. **Documentation Node-cron** : https://www.npmjs.com/package/node-cron

### Informations utiles pour le support

Si tu as besoin d'aide, pr√©pare ces informations :

- Version du bot (voir `package.json`)
- Logs d'erreur complets
- Configuration (sans les tokens !)
- Description du probl√®me
- Quand le probl√®me est apparu

---

## üìù Annexes

### Structure des fichiers

```
discord-plateau-bot/
‚îú‚îÄ‚îÄ index.js              # Code principal du bot
‚îú‚îÄ‚îÄ package.json           # D√©pendances et m√©tadonn√©es  
‚îú‚îÄ‚îÄ Procfile              # Configuration Heroku
‚îú‚îÄ‚îÄ .env.example          # Exemple de configuration
‚îú‚îÄ‚îÄ .gitignore            # Fichiers √† ignorer par Git
‚îú‚îÄ‚îÄ README.md             # Documentation courte
‚îî‚îÄ‚îÄ docs/                 # Documentation compl√®te
    ‚îú‚îÄ‚îÄ README.md         # Ce fichier
    ‚îú‚îÄ‚îÄ architecture.svg  # Sch√©ma d'architecture
    ‚îî‚îÄ‚îÄ data_flow.svg     # Sch√©ma de flux de donn√©es
```

### Technologies utilis√©es

| Technologie | Version | Usage |
|-------------|---------|-------|
| **Node.js** | ‚â•18.0.0 | Runtime JavaScript |
| **discord.js** | ^14.14.1 | API Discord |
| **node-cron** | ^3.0.3 | Planification automatique |
| **dotenv** | ^16.3.1 | Variables d'environnement |
| **Heroku** | - | H√©bergement cloud |

### Glossaire

**API** : Interface de programmation qui permet au bot de communiquer avec Discord

**Bot Discord** : Programme automatis√© qui peut interagir dans un serveur Discord

**Embed** : Message Discord enrichi avec couleurs, champs et formatage

**EVENT_ID** : Identifiant unique d'un √©v√©nement Discord

**Forum Channel** : Type de canal Discord o√π on peut cr√©er des posts/threads

**GUILD_ID** : Identifiant unique d'un serveur Discord

**Heroku** : Service cloud pour h√©berger des applications

**Node.js** : Environnement pour ex√©cuter du JavaScript c√¥t√© serveur

**Token** : Cl√© secr√®te qui authentifie le bot aupr√®s de Discord

**Webhook** : URL qui permet de recevoir des donn√©es automatiquement

---

## üéâ Conclusion

F√©licitations ! Tu as maintenant un bot Discord enti√®rement automatis√© pour g√©rer tes soir√©es plateaux. 

### Ce que tu as accompli :
‚úÖ Bot Discord configur√© et d√©ploy√©  
‚úÖ Automation compl√®te des posts de planning  
‚úÖ Int√©gration avec les √©v√©nements Discord  
‚úÖ Syst√®me robuste avec gestion d'erreurs  
‚úÖ Maintenance et monitoring en place  

### Prochaines √©tapes possibles :
üöÄ Ajouter des notifications par DM  
üöÄ Cr√©er des statistiques de participation  
üöÄ Int√©grer avec d'autres syst√®mes (calendrier, etc.)  
üöÄ Ajouter des commandes interactives  

**Amuse-toi bien avec tes soir√©es plateaux ! üé≤**

---

*Documentation cr√©√©e le 8 octobre 2025 - Version 1.0*